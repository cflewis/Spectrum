# cflewis | 2010-03-29 | A treetop grammar for PRISM
grammar Spectrum
    rule spectrum
        ws? markov_declaration (ws / ((formula / global) ";") / module)* #/ global / label / module)* #(array / whitespace)* #(formula / global / label / module)*
    end
    
    rule markov_declaration
        ("mdp" / "dtmc" / "ctmc")
    end
    
    rule formula
        "formula" ws [\w]+ ws* "=" ws* expression
    end
    
    rule global
        "global" ws variable
    end
    
    rule variable 
        identifier ws* ":" ws* (variable_number / variable_boolean) ws*
    end
    
    rule variable_number
        "[" range "]" (ws "init" ws number)?
    end
    
    rule variable_boolean
        "bool" (ws "init" ws boolean)?
    end
    
    rule range
        [\d]+ ".." [\d]+
    end

    rule identifier
        [a-zA-Z] ([\w]+)?
    end
    
    rule boolean
        ("true" / "false")
    end
    
    rule number
        [\d]+ ("." [\d]+)?
    end
    
    rule literal
        (number / boolean)
    end
    
    rule operator
        "*" /
        "/" /
        "+" /
        "-" /
        "<=" /
        ">=" /
        "<" /
        ">" /
        "=" /
        "!=" /
        "!" /
        "&" /
        "|" /
        "=>"
    end

    rule function
        identifier "(" [^)]* ")"
    end
        

    # rule label
    #     !.
    # end
    # 

    # cflewis | 2010-03-30 | Currently broken; something wrong with
    # the variable definition I think, but the globals work fine...
    rule module
        "module" ws identifier ws ((variable / command) ";")* "endmodule"
    end
    
    rule command
        !.
    end
    
    rule expression
        (ws / literal / operator / function)+
    end

    rule ws
        [\s]+
    end
end